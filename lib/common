#!/usr/bin/env sh

# Skip when already sourced:
test ! $LXC_COMPOSE_LIBLOAD_COMMON || return
export LXC_COMPOSE_LIBLOAD_COMMON=1

###
# Test if a command can be executed.
# Arguments:
#   $1 - command to check.
# Outputs:
#   Nothing.
# Returns:
#   0, if the command exists.
###
testc() {
	command -v "$1" > /dev/null 2>&1
}

###
# Source the primary shell rc file, if it exists.
# Outputs:
#   Nothing.
# Returns:
#   0, if sourcing was successful.
###
sourcerc() {
	test -f "$ENV_SHELL_RC" && \. "$ENV_SHELL_RC"
}

###
# Ensure packages are installed using the default package manager and re-source rc.
# Arguments:
#   $@ - packages to install if not installed.
# Outputs:
#   Installer log or function error, otherwise nothing.
# Returns:
#   0, if packages were found or were installed successfully, otherwise the last error of the package manager. 
#   Returns 1001, if the existence of the package could not be verified or no matching package manager was found to install a package.
###
pkgreq() {
	if testc apk; then
		for pkg in "$@"; do
			if ! apk info --installed --quiet $pkg; then
				apk add $pkg || return
				inst=1
			fi
		done
	elif testc dpkg; then
		for pkg in "$@"; do
			if ! dpkg -l "$pkg" | grep -q ^ii; then
				if testc apt-get; then
					apt-get install $pkg -y || return
				else
					echo "Unable to ensure $pkg, because no package manager to install the package was found."
					return 1001
				fi
				inst=1
			fi
		done
	elif testc rpm; then
		for pkg in "$@"; do
			if ! rpm --nosignature --nodigest -q "$pkg" > /dev/null 2>&1; then
				if testc dnf; then
					dnf install $pkg -y || return
				elif testc yum; then
					yum install $pkg -y || return
				else
					echo "Unable to ensure $pkg, because no package manager to install the package was found."
					return 1001
				fi
				inst=1
			fi
		done
	elif testc brew; then
		for pkg in "$@"; do
			if ! brew list $pkg > /dev/null 2>&1; then
				brew install $pkg -y || return
				inst=1
			fi
		done
	else
		echo "Unable to ensure $@, because no package detection was found."
		return 1001
	fi
	test ! $inst && return 0
	sourcerc
}

###
# Ensure given services are enabled and started.
# Arguments:
#   $@ - services to enable/start.
# Outputs:
#   Service log or function error, otherwise nothing.
# Returns:
#   0, if services were found or were added/started successfully, otherwise the last error of the service manager. 
###
svcreq() {
	if testc rc-service; then
		for svc in "$@"; do
			rc-service $svc start && rc-update add $svc default
		done
	elif testc systemctl; then
		for svc in "$@"; do
			systemctl start $svc && systemctl enable $svc
		done
	fi
}

###
# Ensure given services are enable and started. If a service already runs, it will be restarted.
# Arguments:
#   $@ - services to enable/start/restart.
# Outputs:
#   Service log or function error, otherwise nothing.
# Returns:
#   0, if services were found or were added/started/restarted successfully, otherwise the last error of the service manager. 
###
svcrun() {
	if testc rc-service; then
		for svc in "$@"; do
			rc-service $svc restart && rc-update add $svc default
		done
	elif testc systemctl; then
		for svc in "$@"; do
			systemctl restart $svc && systemctl enable $svc
		done
	fi
}

